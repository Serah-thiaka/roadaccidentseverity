# Import required libraries
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import joblib

# Step 1: Simulate dataset
data = {
    'Number_of_Vehicles': [1, 2, 3, 2, 4, 1, 3, 2, 5, 3],
    'Speed_limit': [30, 40, 50, 60, 30, 50, 40, 60, 30, 50],
    'Weather_Condition': ['Clear', 'Clear', 'Rain', 'Rain', 'Clear', 'Rain', 'Clear', 'Rain', 'Clear', 'Clear'],
    'Accident_Severity': [1, 2, 3, 2, 1, 3, 2, 3, 1, 2]  # 1 = Mild, 2 = Severe, 3 = Fatal
}

df = pd.DataFrame(data)

# Step 2: Convert categorical to numerical (dummy variables)
df = pd.get_dummies(df, columns=['Weather_Condition'], drop_first=True)
# Now we have a column called 'Weather_Condition_Rain'

# Step 3: Define features and target
X = df[['Number_of_Vehicles', 'Speed_limit', 'Weather_Condition_Rain']]
y = df['Accident_Severity']

# Step 4: Split into training and test datasets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Make prediction using an example
example = pd.DataFrame({
    'Number_of_Vehicles': [3],
    'Speed_limit': [45],
    'Weather_Condition_Rain': [1]  # 1 = it's raining
})
prediction = model.predict(example)
print("Predicted Accident Severity (1=Mild, 2=Severe, 3=Fatal):", prediction[0])

# Step 7: Save the model
joblib.dump(model, 'accident_severity_model.pkl')
print("âœ… Model saved as 'accident_severity_model.pkl'")
